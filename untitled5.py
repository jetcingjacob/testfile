# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TzOVmBnYHHWwtZg5I-zO_66xqrvHur9f
"""

#single inheritance
class Hello:
  def __init__(self,name,age,rollno,address):
    self.name=name
    self.age=age
    self.rollno=rollno
    self.address=address
  def display(self):
    print("Name:",self.name,"|Age:",self.age,"|Rollno:",self.rollno,"|Address:",self.address)

student1=Hello("Jetcin G Jacob    ",18,34,"Adoor")
student2=Hello("Mathew Biju George",19,45,"Karavaloor")
student3=Hello("Insha S Mirzad    ",18,32,"Punnala House")
student4=Hello("Gowri Santhosh    ",19,31,"Kayamkulam")
student1.display()
student2.display()
student3.display()
student4.display()

#multiple inheritance

class A:
    def method_a(self):
        print("Method A")

class B:
    def method_b(self):
        print("Method B")

class C(A, B):
    def method_c(self):
        print("Method C")

c = C()
c.method_a()
c.method_b()
c.method_c()

#multilevel inheritance

class Animal:
    def breathe(self):
        print("The animal is breathing.")

class Dog(Animal):
    def bark(self):
        print("The dog is barking.")

class Bulldog(Dog):
    def fetch(self):
        print("The bulldog is fetching.")

my_bulldog = Bulldog()
my_bulldog.breathe()
my_bulldog.bark()
my_bulldog.fetch()

#hybrid inheritance

class Animal:
  def breathe(self):
    print("The animal is breathing.")

class Mammal(Animal):
  def run(self):
    print("The mammal is running.")

class Bird(Animal):
  def fly(self):
    print("The bird is flying.")

class Bat(Mammal, Bird):
  def fly_and_run(self):
    print("The bat can fly and run.")

my_bat = Bat()
my_bat.breathe()
my_bat.run()
my_bat.fly()
my_bat.fly_and_run()

#hierarchichal inheritance

class Animal:
  def breathe(self):
    print("The bird is breathing.")

class Mammal(Animal):
  def run(self):
    print("The mammal is running.")

class Bird(Animal):
  def fly(self):
    print("The bird is flying.")

class Bat(Mammal, Bird):
  def fly_and_run(self):
    print("The bat can fly and run.")

class Human(Mammal):
  def speak(self):
    print("The human is speaking.")

class Parrot(Bird):
  def imitate(self):
    print("The parrot is imitating.")

my_human = Human()
my_human.breathe()
my_human.run()
my_human.speak()

my_parrot = Parrot()
my_parrot.breathe()
my_parrot.fly()
my_parrot.imitate()

# prompt: a slider using jupyter widgets

from ipywidgets import IntSlider

# Create a slider with a range of 0-10
slider = IntSlider(min=0, max=10)

# Display the slider
display(slider)

class BankAccount:
  def __init__(self, accountNumber, name, balance):
    self.accountNumber = accountNumber
    self.name = name
    self.balance = balance

  def deposit(self, amount):
    self.balance += amount
    print(f"Deposited {amount}, new balance: {self.balance}")

  def withdrawal(self, amount):
    if amount > self.balance:
      print("Insufficient funds")
    else:
      self.balance -= amount
      print(f"Withdrew {amount}, new balance: {self.balance}")

  def bankFees(self):
    self.balance -= 0.05 * self.balance
    print(f"Applied bank fees, new balance: {self.balance}")

account1 = BankAccount(12345, "John Doe", 1000)
account1.deposit(500)
account1.withdrawal(200)
account1.bankFees()